rawconsumption <- as.data.table(read_excel("bulk_consumption_with_temp_excel.xlsx"))
colnames(rawconsumption) <- c("event_date", "event_hour", "consumption",
"t_1","t_2","t_3","t_4","t_5","t_6","t_7")
rawconsumption$event_date <- as.Date(rawconsumption$event_date)
rawconsumption$event_hour <- as.integer(rawconsumption$event_hour)
rawconsumption <- rbind(rawconsumption,data)
rawconsumption=rawconsumption[order(event_date,event_hour)]
rawconsumption[, trend:=c(1:.N)]
head(rawconsumption)
tail(rawconsumption)
#View(rawconsumption)
library(lubridate)
library(readxl)
library(zoo)
library(data.table)
library(urca)
require(jsonlite)
require(httr)
require(dplyr)
require("fpp")
require("ggplot2")
require("forecast")
require("stats")
require("xlsx")
require("lubridate")
require("readr")
setwd("C:/Users/90533/Desktop")
library(lubridate)
library(readxl)
library(zoo)
library(data.table)
library(urca)
require(jsonlite)
require(httr)
require(dplyr)
require("fpp")
require("ggplot2")
require("forecast")
require("stats")
require("xlsx")
require("lubridate")
require("readr")
setwd("D:/AILEvs/EZ/EGITIM/AAAA_EE_4.YIL/IE_360/PR")
rawconsumption <- as.data.table(read_excel("bulk_consumption_with_temp_excel.xlsx"))
colnames(rawconsumption) <- c("event_date", "event_hour", "consumption",
"t_1","t_2","t_3","t_4","t_5","t_6","t_7")
ggplot(rawconsumption, aes(x=rawconsumption$event_date, y=rawconsumption$consumption)) +
geom_line(size = 0.6, color="darkred", alpha = 0.7) +
geom_point(size = 0.2, color="orange", alpha = 0.5) +
labs(title = "Hourly Electricity Consumption from 2017-01-01 to 2021-01-01",
x = "Date",y = "Amount of Electricity(mWh)") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme_classic()
ggplot(rawconsumption, aes(x=rawconsumption$event_date, y=rawconsumption$consumption)) +
geom_line(size = 0.6, color="red", alpha = 0.7) +
geom_point(size = 0.2, color="orange", alpha = 0.5) +
labs(title = "Hourly Electricity Consumption from 2017-01-01 to 2021-01-01",
x = "Date",y = "Amount of Electricity(mWh)") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme_classic()
ggplot(rawconsumption, aes(x=rawconsumption$event_date, y=rawconsumption$consumption)) +
geom_line(size = 0.6, color="darkred", alpha = 0.7) +
geom_point(size = 0.2, color="green", alpha = 0.5) +
labs(title = "Hourly Electricity Consumption from 2017-01-01 to 2021-01-01",
x = "Date",y = "Amount of Electricity(mWh)") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme_classic()
ggplot(rawconsumption, aes(x=rawconsumption$event_date, y=rawconsumption$consumption)) +
geom_line(size = 0.6, color="darkred", alpha = 0.5) +
geom_point(size = 0.2, color="green", alpha = 0.5) +
labs(title = "Hourly Electricity Consumption from 2017-01-01 to 2021-01-01",
x = "Date",y = "Amount of Electricity(mWh)") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme_classic()
library(lubridate)
library(readxl)
library(zoo)
library(data.table)
library(urca)
require(jsonlite)
require(httr)
require(dplyr)
require("fpp")
require("ggplot2")
require("forecast")
require("stats")
require("xlsx")
require("lubridate")
require("readr")
get_token <- function(username, password, url_site){
post_body = list(username=username,password=password)
post_url_string = paste0(url_site,'/token/')
result = POST(post_url_string, body = post_body)
# error handling (wrong credentials)
if(result$status_code==400){
print('Check your credentials')
return(0)
}
else if (result$status_code==201){
output = content(result)
token = output$key
}
return(token)
}
get_data <- function(start_date='2020-03-20', token, url_site){
post_body = list(start_date=start_date,username=username,password=password)
post_url_string = paste0(url_site,'/dataset/')
header = add_headers(c(Authorization=paste('Token',token,sep=' ')))
result = GET(post_url_string, header, body = post_body)
output = content(result)
data = data.table::rbindlist(output)
data[,event_date:=as.Date(event_date)]
data = data[order(event_date)]
return(data)
}
send_submission <- function(predictions, token, url_site, submit_now=F){
format_check=check_format(predictions)
if(!format_check){
return(FALSE)
}
post_string="list("
for(i in 1:nrow(predictions)){
if(i<nrow(predictions)){
post_string=sprintf("%s%s,",post_string,predictions$forecast[i])
} else {
post_string=sprintf("%s%s)",post_string,predictions$forecast[i])
}
}
submission = eval(parse(text=post_string))
json_body = jsonlite::toJSON(submission, auto_unbox = TRUE)
submission=list(submission=json_body)
print(submission)
# {"31515569":2.4,"32939029":2.4,"4066298":2.4,"6676673":2.4,"7061886":2.4,"85004":2.4}
if(!submit_now){
print("You did not submit.")
return(FALSE)
}
header = add_headers(c(Authorization=paste('Token',token,sep=' ')))
post_url_string = paste0(url_site,'/submission/')
result = POST(post_url_string, header, body=submission)
if (result$status_code==201){
print("Successfully submitted. Below you can see the details of your submission")
} else {
print("Could not submit. Please check the error message below, contact the assistant if needed.")
}
print(content(result))
}
check_format <- function(predictions){
if(is.data.frame(predictions) | is.data.frame(predictions)){
if('forecast' %in% names(predictions)){
if(nrow(predictions)==24){
if(all(is.numeric(predictions$forecast))){
print("Format OK")
return(TRUE)
} else {
print("forecast information is not numeric")
return(FALSE)
}
} else {
print("Forecasts for 24 hours should be provided, current number of rows:")
print(nrow(predictions))
return(FALSE)
}
}
} else {
print("Wrong format. Please provide data.frame or data.table object")
return(FALSE)
}
}
# this part is main code
subm_url = 'http://46.101.124.77'
u_name = "Group8"
p_word = "ULjl3glhlb2hnFly"
submit_now = FALSE
username = u_name
password = p_word
token = get_token(username=u_name, password=p_word, url=subm_url)
data = get_data(token=token,url=subm_url)
setwd("D:/AILEvs/EZ/EGITIM/AAAA_EE_4.YIL/IE_360/PR")
rawconsumption <- as.data.table(read_excel("bulk_consumption_with_temp_excel.xlsx"))
colnames(rawconsumption) <- c("event_date", "event_hour", "consumption",
"t_1","t_2","t_3","t_4","t_5","t_6","t_7")
rawconsumption$event_date <- as.Date(rawconsumption$event_date)
rawconsumption$event_hour <- as.integer(rawconsumption$event_hour)
rawconsumption <- rbind(rawconsumption,data)
rawconsumption=rawconsumption[order(event_date,event_hour)]
head(rawconsumption)
tail(rawconsumption)
rawconsumption[, trend:=c(1:.N)]
#View(rawconsumption)
#day controller
rawconsumption[,doy:=weekdays(event_date)]
#week controller
whichweek<-rep(1:215, each = 168)
asd <-rep(216,48)
rawconsumption[,woy:=c(whichweek,asd)]
#first corona case in turkey
rawconsumption[event_date < "2020-03-15", firstcase:=0]
rawconsumption[event_date >= "2020-03-15", firstcase:=1]
rawconsumption$firstcase <- as.factor(rawconsumption$firstcase)
#sokaga Ã§ikma restrictions in turkey
rawconsumption[, restriction:=0]
rawconsumption[event_date == "2020-04-11", restriction:=1]
rawconsumption[event_date == "2020-04-12", restriction:=1]
rawconsumption[event_date > "2020-04-12" & event_date < "2020-06-01" & (doy=="Saturday" | doy=="Sunday"),
restriction:=1]
rawconsumption[event_date >= "2020-11-20" & event_hour > 20 & doy == "Friday", restriction:=1]
rawconsumption[event_date >= "2020-11-20" & (event_hour > 16 | event_hour < 9) & (doy=="Saturday" | doy=="Sunday"),
restriction:=1]
rawconsumption[event_date >= "2020-11-20" & event_hour < 5 & doy == "Monday", restriction:=1]
rawconsumption[event_date >= "2020-12-05" & (doy=="Saturday" | doy=="Sunday"),
restriction:=1]
rawconsumption$restriction <- as.factor(rawconsumption$restriction)
#define religious variables
rawconsumption[, dinipazartesi:=0]
rawconsumption[, dinisali:=0]
rawconsumption[, dinicarsamba:=0]
rawconsumption[, dinipersembe:=0]
rawconsumption[, dinicuma:=0]
rawconsumption[, dinicumartesi:=0]
rawconsumption[, dinipazar:=0]
#assign variables values
rawconsumption[ event_date == "2017-06-25" ,dinipazar := 1]
rawconsumption[ event_date == "2017-06-26" ,dinipazartesi := 1]
rawconsumption[ event_date == "2017-06-27" ,dinisali := 1]
rawconsumption[ event_date == "2017-08-31" ,dinipersembe := 1]
rawconsumption[ event_date == "2017-09-01" ,dinicuma := 1]
rawconsumption[ event_date == "2017-09-02" ,dinicumartesi := 1]
rawconsumption[ event_date == "2017-09-03" ,dinipazar := 1]
rawconsumption[ event_date == "2017-09-04" ,dinipazartesi := 1]
rawconsumption[ event_date == "2017-10-29" ,dinipazar := 1]
rawconsumption[ event_date == "2018-06-14" ,dinipersembe := 1]
rawconsumption[ event_date == "2018-06-15" ,dinicuma := 1]
rawconsumption[ event_date == "2018-06-16" ,dinicumartesi := 1]
rawconsumption[ event_date == "2018-06-17" ,dinipazar := 1]
rawconsumption[ event_date == "2018-07-15" ,dinipazar := 1]
rawconsumption[ event_date == "2018-08-20" ,dinipazartesi := 1]
rawconsumption[ event_date == "2018-08-21" ,dinisali := 1]
rawconsumption[ event_date == "2018-08-22" ,dinicarsamba:= 1]
rawconsumption[ event_date == "2018-08-23" ,dinipersembe := 1]
rawconsumption[ event_date == "2018-08-24" ,dinicuma := 1]
rawconsumption[ event_date == "2019-06-04" ,dinisali := 1]
rawconsumption[ event_date == "2019-06-05" ,dinicarsamba := 1]
rawconsumption[ event_date == "2019-06-06" ,dinipersembe := 1]
rawconsumption[ event_date == "2019-06-07" ,dinicuma := 1]
rawconsumption[ event_date == "2019-08-10" ,dinicumartesi := 1]
rawconsumption[ event_date == "2019-08-11" ,dinipazar := 1]
rawconsumption[ event_date == "2019-08-12" ,dinipazartesi := 1]
rawconsumption[ event_date == "2019-08-13" ,dinisali := 1]
rawconsumption[ event_date == "2019-08-14" ,dinicarsamba := 1]
rawconsumption[ event_date == "2019-08-30" ,dinicuma := 1]
rawconsumption[ event_date == "2020-05-23" ,dinicumartesi := 1]
rawconsumption[ event_date == "2020-05-24" ,dinipazar := 1]
rawconsumption[ event_date == "2020-05-25" ,dinipazartesi := 1]
rawconsumption[ event_date == "2020-05-26" ,dinisali := 1]
rawconsumption[ event_date == "2020-07-30" ,dinipersembe := 1]
rawconsumption[ event_date == "2020-07-31" ,dinicuma := 1]
rawconsumption[ event_date == "2020-08-01" ,dinicumartesi := 1]
rawconsumption[ event_date == "2020-08-02" ,dinipazar := 1]
rawconsumption[ event_date == "2020-08-03" ,dinipazartesi := 1]
rawconsumption$dinipazartesi <- as.factor(rawconsumption$dinipazartesi)
rawconsumption$dinisali <- as.factor(rawconsumption$dinisali)
rawconsumption$dinicarsamba <- as.factor(rawconsumption$dinicarsamba)
rawconsumption$dinipersembe <- as.factor(rawconsumption$dinipersembe)
rawconsumption$dinicuma <- as.factor(rawconsumption$dinicuma)
rawconsumption$dinicumartesi <- as.factor(rawconsumption$dinicumartesi)
rawconsumption$dinipazar <- as.factor(rawconsumption$dinipazar)
# Special days of Turkey
rawconsumption[, ozelpazartesi:=0]
rawconsumption[, ozelsali:=0]
rawconsumption[, ozelcarsamba:=0]
rawconsumption[, ozelpersembe:=0]
rawconsumption[, ozelcuma:=0]
rawconsumption[, ozelcumartesi:=0]
rawconsumption[, ozelpazar:=0]
# assign variables values
rawconsumption[ event_date == "2017-01-01" ,ozelpazar := 1]
rawconsumption[ event_date == "2017-04-23" ,ozelpazar := 1]
rawconsumption[ event_date == "2017-05-01" ,ozelpazartesi := 1]
rawconsumption[ event_date == "2017-05-19" ,ozelcuma := 1]
rawconsumption[ event_date == "2017-06-24" ,ozelcumartesi := 1]
rawconsumption[ event_date == "2017-07-15" ,ozelcumartesi := 1]
rawconsumption[ event_date == "2017-08-30" ,ozelcarsamba := 1]
rawconsumption[ event_date == "2017-12-31" ,ozelpazar := 1]
rawconsumption[ event_date == "2018-01-01" ,ozelpazartesi := 1]
rawconsumption[ event_date == "2018-04-23" ,ozelpazartesi := 1]
rawconsumption[ event_date == "2018-05-01" ,ozelsali := 1]
rawconsumption[ event_date == "2018-05-19" ,ozelpazartesi := 1]
rawconsumption[ event_date == "2018-08-30" ,ozelpersembe := 1]
rawconsumption[ event_date == "2018-10-29" ,ozelpazartesi := 1]
rawconsumption[ event_date == "2018-12-31" ,ozelpazartesi := 1]
rawconsumption[ event_date == "2019-01-01" ,ozelsali := 1]
rawconsumption[ event_date == "2019-04-23" ,ozelsali := 1]
rawconsumption[ event_date == "2019-05-01" ,ozelcarsamba := 1]
rawconsumption[ event_date == "2019-05-19" ,ozelpazar := 1]
rawconsumption[ event_date == "2019-07-15" ,ozelpazartesi := 1]
rawconsumption[ event_date == "2019-10-29" ,ozelsali := 1]
rawconsumption[ event_date == "2019-12-31" ,ozelsali := 1]
rawconsumption[ event_date == "2020-01-01" ,ozelcarsamba  := 1]
rawconsumption[ event_date == "2020-04-23" ,ozelpersembe := 1]
rawconsumption[ event_date == "2020-05-01" ,ozelcuma := 1]
rawconsumption[ event_date == "2020-05-19" ,ozelsali := 1]
rawconsumption[ event_date == "2020-07-15" ,ozelcarsamba := 1]
rawconsumption[ event_date == "2020-08-30" ,ozelpazar := 1]
rawconsumption[ event_date == "2020-10-29" ,ozelpersembe := 1]
rawconsumption[ event_date == "2020-12-31" ,ozelpersembe := 1]
rawconsumption$ozelpazartesi <- as.factor(rawconsumption$ozelpazartesi)
rawconsumption$ozelsali <- as.factor(rawconsumption$ozelsali)
rawconsumption$ozelcarsamba <- as.factor(rawconsumption$ozelcarsamba)
rawconsumption$ozelpersembe <- as.factor(rawconsumption$ozelpersembe)
rawconsumption$ozelcuma <- as.factor(rawconsumption$ozelcuma)
rawconsumption$ozelcumartesi <- as.factor(rawconsumption$ozelcumartesi)
rawconsumption$ozelpazar <- as.factor(rawconsumption$ozelpazar)
rawconsumption[consumption < mean(consumption), mean:=0]
rawconsumption[consumption >= mean(consumption), mean:=1]
rawconsumption$mean <- as.factor(rawconsumption$mean)
# create quantiles
rawconsumption[consumption <= quantile(consumption,0.05), quant5:=1]
rawconsumption[consumption > quantile(consumption,0.05), quant5:=0]
rawconsumption[consumption < quantile(consumption,0.1), quant10:=1]
rawconsumption[consumption >= quantile(consumption,0.1), quant10:=0]
rawconsumption[consumption <= quantile(consumption,0.25), quant25:=1]
rawconsumption[consumption > quantile(consumption,0.25), quant25:=0]
rawconsumption[consumption < quantile(consumption,0.75), quant75:=0]
rawconsumption[consumption >= quantile(consumption,0.75), quant75:=1]
rawconsumption[consumption < quantile(consumption,0.9), quant90:=0]
rawconsumption[consumption >= quantile(consumption,0.9), quant90:=1]
rawconsumption[consumption < quantile(consumption,0.95), quant95:=0]
rawconsumption[consumption >= quantile(consumption,0.95), quant95:=1]
rawconsumption$quant5 <- as.factor(rawconsumption$quant5)
rawconsumption$quant95 <- as.factor(rawconsumption$quant10)
rawconsumption$quant25 <- as.factor(rawconsumption$quant25)
rawconsumption$quant75 <- as.factor(rawconsumption$quant75)
rawconsumption$quant95 <- as.factor(rawconsumption$quant90)
rawconsumption$quant95 <- as.factor(rawconsumption$quant95)
# create variable for every day of week as a factor
rawconsumption[,number_doy1:= as.factor(0)]
rawconsumption[rawconsumption$event_date %>% wday == 1,number_doy1:= as.factor(1)]
rawconsumption[,number_doy2:= as.factor(0)]
rawconsumption[rawconsumption$event_date %>% wday == 2,number_doy2:= as.factor(1)]
rawconsumption[,number_doy3:= as.factor(0)]
rawconsumption[rawconsumption$event_date %>% wday == 3,number_doy3:= as.factor(1)]
rawconsumption[,number_doy4:= as.factor(0)]
rawconsumption[rawconsumption$event_date %>% wday == 4,number_doy4:= as.factor(1)]
rawconsumption[,number_doy5:= as.factor(0)]
rawconsumption[rawconsumption$event_date %>% wday == 5,number_doy5:= as.factor(1)]
rawconsumption[,number_doy6:= as.factor(0)]
rawconsumption[rawconsumption$event_date %>% wday == 6,number_doy6:= as.factor(1)]
rawconsumption[,number_doy7:= as.factor(0)]
rawconsumption[rawconsumption$event_date %>% wday == 7,number_doy7:= as.factor(1)]
# create variables for every hour in a day
rawconsumption[,number_hour0:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 0, number_hour0:= as.factor(1)]
rawconsumption[,number_hour1:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 1, number_hour1:= as.factor(1)]
rawconsumption[,number_hour2:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 2, number_hour2:= as.factor(1)]
rawconsumption[,number_hour3:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 3, number_hour3:= as.factor(1)]
rawconsumption[,number_hour4:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 4, number_hour4:= as.factor(1)]
rawconsumption[,number_hour5:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 5, number_hour5:= as.factor(1)]
rawconsumption[,number_hour6:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 6, number_hour6:= as.factor(1)]
rawconsumption[,number_hour7:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 7, number_hour7:= as.factor(1)]
rawconsumption[,number_hour8:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 8, number_hour8:= as.factor(1)]
rawconsumption[,number_hour9:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 9, number_hour9:= as.factor(1)]
rawconsumption[,number_hour10:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 10, number_hour10:= as.factor(1)]
rawconsumption[,number_hour11:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 11, number_hour11:= as.factor(1)]
rawconsumption[,number_hour12:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 12, number_hour12:= as.factor(1)]
rawconsumption[,number_hour13:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 13, number_hour13:= as.factor(1)]
rawconsumption[,number_hour14:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 14, number_hour14:= as.factor(1)]
rawconsumption[,number_hour15:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 15, number_hour15:= as.factor(1)]
rawconsumption[,number_hour16:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 16, number_hour16:= as.factor(1)]
rawconsumption[,number_hour17:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 17, number_hour17:= as.factor(1)]
rawconsumption[,number_hour18:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 18, number_hour18:= as.factor(1)]
rawconsumption[,number_hour19:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 19, number_hour19:= as.factor(1)]
rawconsumption[,number_hour20:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 20, number_hour20:= as.factor(1)]
rawconsumption[,number_hour21:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 21, number_hour21:= as.factor(1)]
rawconsumption[,number_hour22:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 22, number_hour22:= as.factor(1)]
rawconsumption[,number_hour23:= as.factor(0)]
rawconsumption[rawconsumption$event_hour == 23, number_hour23:= as.factor(1)]
#create month and year indexes
rawconsumption[,Month:=as.factor(month(event_date))]
rawconsumption[,Year:=as.factor(year(event_date))]
head(rawconsumption)
tail(rawconsumption)
#xreg <- cbind(
#trend = rawconsumption$trend,
#quant5=as.factor(rawconsumption$quant5),
#quant95=as.factor(rawconsumption$quant95),
#quant25=as.factor(rawconsumption$quant25),
#quant75=as.factor(rawconsumption$quant75),
#woy=as.factor(rawconsumption$woy),
#mean=as.factor(rawconsumption$mean),
#firstcase=as.factor(rawconsumption$firstcase),
#dinipazartesi=as.factor(rawconsumption$dinipazartesi), #dinisali=as.factor(rawconsumption$dinisali), #dinicarsamba=as.factor(rawconsumption$dinicarsamba), #dinipersembe=as.factor(rawconsumption$dinipersembe), #dinicuma=as.factor(rawconsumption$dinicuma), #dinicumartesi=as.factor(rawconsumption$dinicumartesi), #dinipazar=as.factor(rawconsumption$dinipazar), #ozelpazartesi=as.factor(rawconsumption$ozelpazartesi), #ozelsali=as.factor(rawconsumption$ozelsali), #ozelcarsamba=as.factor(rawconsumption$ozelcarsamba), #ozelpersembe=as.factor(rawconsumption$ozelpersembe), #ozelcuma=as.factor(rawconsumption$ozelcuma), #ozelcumartesi=as.factor(rawconsumption$ozelcumartesi), #ozelpazar=as.factor(rawconsumption$ozelpazar),
#t_1 = rawconsumption$t_1,
#t_2 = rawconsumption$t_2,
#t_3 = rawconsumption$t_3,
#t_4 = rawconsumption$t_4,
#t_5 = rawconsumption$t_5,
#t_6 = rawconsumption$t_6,
#t_7 = rawconsumption$t_7,
#differenceweek = rawconsumption$differenceweek,
#differenceday = rawconsumption$differenceday,
#number_doy1=as.factor(rawconsumption$number_doy1), #number_doy2=as.factor(rawconsumption$number_doy2), #number_doy3=as.factor(rawconsumption$number_doy3),
#number_doy4=as.factor(rawconsumption$number_doy4), #number_doy5=as.factor(rawconsumption$number_doy5),
#number_doy6=as.factor(rawconsumption$number_doy6),
#number_doy7=as.factor(rawconsumption$number_doy7),
#number_hour0=as.factor(rawconsumption$number_hour0),
#number_hour1=as.factor(rawconsumption$number_hour1),
#number_hour2=as.factor(rawconsumption$number_hour2),
#number_hour3=as.factor(rawconsumption$number_hour3),
#number_hour4=as.factor(rawconsumption$number_hour4),
#number_hour5=as.factor(rawconsumption$number_hour5),
#number_hour6=as.factor(rawconsumption$number_hour6),
#number_hour7=as.factor(rawconsumption$number_hour7),
#number_hour8=as.factor(rawconsumption$number_hour8),
#number_hour9=as.factor(rawconsumption$number_hour9),
#number_hour10=as.factor(rawconsumption$number_hour10),
#number_hour11=as.factor(rawconsumption$number_hour11),
#number_hour12=as.factor(rawconsumption$number_hour12),
#number_hour13=as.factor(rawconsumption$number_hour13),
#number_hour14=as.factor(rawconsumption$number_hour14),
#number_hour15=as.factor(rawconsumption$number_hour15),
#number_hour16=as.factor(rawconsumption$number_hour16),
#number_hour17=as.factor(rawconsumption$number_hour17),
#number_hour18=as.factor(rawconsumption$number_hour18),
#number_hour19=as.factor(rawconsumption$number_hour19),
#number_hour20=as.factor(rawconsumption$number_hour20),
#number_hour21=as.factor(rawconsumption$number_hour21),
#number_hour22=as.factor(rawconsumption$number_hour22),
#number_hour23=as.factor(rawconsumption$number_hour23)
# decide which data is test data, which not?
test <- rawconsumption[event_date>"2021-02-13"]
rawconsumption <- rawconsumption[event_date<="2021-02-13"]
tail(test)
tail(rawconsumption)
#test data update?
test$consumption <- rawconsumption$consumption[35953:36000]
test$quant5 <- rawconsumption$quant5[35953:36000]
test$quant25 <- rawconsumption$quant25[35953:36000]
test$quant75 <- rawconsumption$quant75[35953:36000]
test$quant95 <- rawconsumption$quant95[35953:36000]
rawconsumption <- rbind(rawconsumption, test)
# difference update?
rawconsumption[,differenceweek:=rawconsumption$consumption-shift(rawconsumption$consumption,168)]
rawconsumption[,differenceday:=rawconsumption$consumption-shift(rawconsumption$consumption,24)]
# remove NA's
rawconsumption <- rawconsumption[complete.cases(rawconsumption)]
# after multiple trials, this is the decided as best model
cons <- rawconsumption$consumption
modelbest2 <- lm(cons ~ number_doy1+number_doy2+number_doy3+number_doy4+number_doy5+number_doy6+
number_hour0+number_hour1+number_hour2+number_hour3+number_hour4+number_hour5+number_hour6+number_hour7+
number_hour8+number_hour9+number_hour10+number_hour11+number_hour12+number_hour13+number_hour14+
number_hour15+number_hour16+number_hour17+number_hour18+number_hour19+number_hour20+number_hour21+
number_hour22+quant5+quant95+quant25+quant75+mean+restriction+trend+
t_1+t_2+t_5+t_6+t_7+ozelpazartesi+ozelsali+ozelcarsamba+ozelpersembe+ozelcuma+
dinipazartesi+dinisali+dinicarsamba+dinipersembe+dinicuma+dinicumartesi+dinipazar+Month+Year+differenceday+differenceweek, data=rawconsumption)
# observe the model
summary(modelbest2)
# forecast by model
rawconsumption[, fitted:=fitted(modelbest2)]
tail(rawconsumption)
#View(rawconsumption)
# investigating forecast and its correctness
output <- function(actual, forecasted){
n=length(actual)
error = actual-forecasted
mean=mean(actual)
sd=sd(actual)
bias = sum(error)/sum(actual)
mape = sum(abs(error/actual))/n
mad = sum(abs(error))/n
wmape = mad/mean
l = data.frame(n,mean,sd,bias,mape,mad,wmape)
return(l)
}
output(rawconsumption$consumption, rawconsumption$fitted)
a <- ggplot(rawconsumption, aes(x=rawconsumption$event_date)) +
geom_line(aes(y=rawconsumption$consumption), size = 0.6, color="darkred", alpha = 0.5) +
geom_line(aes(y=rawconsumption$fitted), size = 0.6, color="green", alpha = 0.5) +
labs(title = "Comparison Between Actual and Predicted Hourly\nElectricity Consumption from 2017-01-01 to 2021-02-15",
x = "Date",y = "Amount of Electricity(mWh)") +
theme_classic()
a
lastvalue <- tail(rawconsumption, 24)
b<- ggplot(lastvalue, aes(x=lastvalue$trend)) +
geom_line(aes(y=lastvalue$consumption), size = 0.6, color="darkred", alpha = 0.5) +
geom_line(aes(y=lastvalue$fitted), size = 0.6, color="green", alpha = 0.5) +
labs(title = "Comparison Between Actual and Predicted Hourly\nElectricity Consumption For Last Two Day",
x = "Index",y = "Amount of Electricity(mWh)") +
theme_classic()
b
